// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocol.proto

#include "Protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace Protocol {
PROTOBUF_CONSTEXPR MS_ENTER_GAME::MS_ENTER_GAME(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_ENTER_GAMEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_ENTER_GAMEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_ENTER_GAMEDefaultTypeInternal() {}
  union {
    MS_ENTER_GAME _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_ENTER_GAMEDefaultTypeInternal _MS_ENTER_GAME_default_instance_;
PROTOBUF_CONSTEXPR MS_LEAVE_GAME::MS_LEAVE_GAME(
    ::_pbi::ConstantInitialized) {}
struct MS_LEAVE_GAMEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_LEAVE_GAMEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_LEAVE_GAMEDefaultTypeInternal() {}
  union {
    MS_LEAVE_GAME _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_LEAVE_GAMEDefaultTypeInternal _MS_LEAVE_GAME_default_instance_;
PROTOBUF_CONSTEXPR MS_SPAWN::MS_SPAWN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.objects_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_SPAWNDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_SPAWNDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_SPAWNDefaultTypeInternal() {}
  union {
    MS_SPAWN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_SPAWNDefaultTypeInternal _MS_SPAWN_default_instance_;
PROTOBUF_CONSTEXPR MS_DESPAWN::MS_DESPAWN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.object_ids_)*/{}
  , /*decltype(_impl_._object_ids_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_DESPAWNDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_DESPAWNDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_DESPAWNDefaultTypeInternal() {}
  union {
    MS_DESPAWN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_DESPAWNDefaultTypeInternal _MS_DESPAWN_default_instance_;
PROTOBUF_CONSTEXPR UC_MOVE::UC_MOVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pos_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UC_MOVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UC_MOVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UC_MOVEDefaultTypeInternal() {}
  union {
    UC_MOVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UC_MOVEDefaultTypeInternal _UC_MOVE_default_instance_;
PROTOBUF_CONSTEXPR MS_MOVE::MS_MOVE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.pos_info_)*/nullptr
  , /*decltype(_impl_.object_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_MOVEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_MOVEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_MOVEDefaultTypeInternal() {}
  union {
    MS_MOVE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_MOVEDefaultTypeInternal _MS_MOVE_default_instance_;
PROTOBUF_CONSTEXPR UC_SKILL::UC_SKILL(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UC_SKILLDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UC_SKILLDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UC_SKILLDefaultTypeInternal() {}
  union {
    UC_SKILL _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UC_SKILLDefaultTypeInternal _UC_SKILL_default_instance_;
PROTOBUF_CONSTEXPR MS_SKILL::MS_SKILL(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.info_)*/nullptr
  , /*decltype(_impl_.object_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_SKILLDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_SKILLDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_SKILLDefaultTypeInternal() {}
  union {
    MS_SKILL _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_SKILLDefaultTypeInternal _MS_SKILL_default_instance_;
PROTOBUF_CONSTEXPR MS_DIE::MS_DIE(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.object_id_)*/0
  , /*decltype(_impl_.attacker_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_DIEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_DIEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_DIEDefaultTypeInternal() {}
  union {
    MS_DIE _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_DIEDefaultTypeInternal _MS_DIE_default_instance_;
PROTOBUF_CONSTEXPR MS_CHANGE_HP::MS_CHANGE_HP(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.object_id_)*/0
  , /*decltype(_impl_.hp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_CHANGE_HPDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_CHANGE_HPDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_CHANGE_HPDefaultTypeInternal() {}
  union {
    MS_CHANGE_HP _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_CHANGE_HPDefaultTypeInternal _MS_CHANGE_HP_default_instance_;
PROTOBUF_CONSTEXPR MS_CONNECTED::MS_CONNECTED(
    ::_pbi::ConstantInitialized) {}
struct MS_CONNECTEDDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_CONNECTEDDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_CONNECTEDDefaultTypeInternal() {}
  union {
    MS_CONNECTED _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_CONNECTEDDefaultTypeInternal _MS_CONNECTED_default_instance_;
PROTOBUF_CONSTEXPR UC_LOGIN::UC_LOGIN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.unique_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UC_LOGINDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UC_LOGINDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UC_LOGINDefaultTypeInternal() {}
  union {
    UC_LOGIN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UC_LOGINDefaultTypeInternal _UC_LOGIN_default_instance_;
PROTOBUF_CONSTEXPR MS_LOGIN::MS_LOGIN(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.players_)*/{}
  , /*decltype(_impl_.login_ok_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_LOGINDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_LOGINDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_LOGINDefaultTypeInternal() {}
  union {
    MS_LOGIN _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_LOGINDefaultTypeInternal _MS_LOGIN_default_instance_;
PROTOBUF_CONSTEXPR UC_CREATE_PLAYER::UC_CREATE_PLAYER(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UC_CREATE_PLAYERDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UC_CREATE_PLAYERDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UC_CREATE_PLAYERDefaultTypeInternal() {}
  union {
    UC_CREATE_PLAYER _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UC_CREATE_PLAYERDefaultTypeInternal _UC_CREATE_PLAYER_default_instance_;
PROTOBUF_CONSTEXPR MS_CREATE_PLAYER::MS_CREATE_PLAYER(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.player_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_CREATE_PLAYERDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_CREATE_PLAYERDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_CREATE_PLAYERDefaultTypeInternal() {}
  union {
    MS_CREATE_PLAYER _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_CREATE_PLAYERDefaultTypeInternal _MS_CREATE_PLAYER_default_instance_;
PROTOBUF_CONSTEXPR UC_ENTER_GAME::UC_ENTER_GAME(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UC_ENTER_GAMEDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UC_ENTER_GAMEDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UC_ENTER_GAMEDefaultTypeInternal() {}
  union {
    UC_ENTER_GAME _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UC_ENTER_GAMEDefaultTypeInternal _UC_ENTER_GAME_default_instance_;
PROTOBUF_CONSTEXPR MS_ITEM_LIST::MS_ITEM_LIST(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_ITEM_LISTDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_ITEM_LISTDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_ITEM_LISTDefaultTypeInternal() {}
  union {
    MS_ITEM_LIST _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_ITEM_LISTDefaultTypeInternal _MS_ITEM_LIST_default_instance_;
PROTOBUF_CONSTEXPR MS_ADD_ITEM::MS_ADD_ITEM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.items_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_ADD_ITEMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_ADD_ITEMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_ADD_ITEMDefaultTypeInternal() {}
  union {
    MS_ADD_ITEM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_ADD_ITEMDefaultTypeInternal _MS_ADD_ITEM_default_instance_;
PROTOBUF_CONSTEXPR UC_EQUIP_ITEM::UC_EQUIP_ITEM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_db_id_)*/0
  , /*decltype(_impl_.equipped_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UC_EQUIP_ITEMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UC_EQUIP_ITEMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UC_EQUIP_ITEMDefaultTypeInternal() {}
  union {
    UC_EQUIP_ITEM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UC_EQUIP_ITEMDefaultTypeInternal _UC_EQUIP_ITEM_default_instance_;
PROTOBUF_CONSTEXPR MS_EQUIP_ITEM::MS_EQUIP_ITEM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.item_db_id_)*/0
  , /*decltype(_impl_.equipped_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_EQUIP_ITEMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_EQUIP_ITEMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_EQUIP_ITEMDefaultTypeInternal() {}
  union {
    MS_EQUIP_ITEM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_EQUIP_ITEMDefaultTypeInternal _MS_EQUIP_ITEM_default_instance_;
PROTOBUF_CONSTEXPR MS_CHANGE_STAT::MS_CHANGE_STAT(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stat_info_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MS_CHANGE_STATDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_CHANGE_STATDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_CHANGE_STATDefaultTypeInternal() {}
  union {
    MS_CHANGE_STAT _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_CHANGE_STATDefaultTypeInternal _MS_CHANGE_STAT_default_instance_;
PROTOBUF_CONSTEXPR MS_PING::MS_PING(
    ::_pbi::ConstantInitialized) {}
struct MS_PINGDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MS_PINGDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MS_PINGDefaultTypeInternal() {}
  union {
    MS_PING _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MS_PINGDefaultTypeInternal _MS_PING_default_instance_;
PROTOBUF_CONSTEXPR UC_PONG::UC_PONG(
    ::_pbi::ConstantInitialized) {}
struct UC_PONGDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UC_PONGDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UC_PONGDefaultTypeInternal() {}
  union {
    UC_PONG _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UC_PONGDefaultTypeInternal _UC_PONG_default_instance_;
PROTOBUF_CONSTEXPR UC_CHANGE_ROOM::UC_CHANGE_ROOM(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.room_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UC_CHANGE_ROOMDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UC_CHANGE_ROOMDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UC_CHANGE_ROOMDefaultTypeInternal() {}
  union {
    UC_CHANGE_ROOM _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UC_CHANGE_ROOMDefaultTypeInternal _UC_CHANGE_ROOM_default_instance_;
}  // namespace Protocol
static ::_pb::Metadata file_level_metadata_Protocol_2eproto[24];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Protocol_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Protocol_2eproto = nullptr;

const uint32_t TableStruct_Protocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_ENTER_GAME, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_ENTER_GAME, _impl_.player_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_LEAVE_GAME, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_SPAWN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_SPAWN, _impl_.objects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_DESPAWN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_DESPAWN, _impl_.object_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_MOVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_MOVE, _impl_.pos_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_MOVE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_MOVE, _impl_.object_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_MOVE, _impl_.pos_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_SKILL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_SKILL, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_SKILL, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_SKILL, _impl_.object_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_SKILL, _impl_.info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_DIE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_DIE, _impl_.object_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_DIE, _impl_.attacker_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_CHANGE_HP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_CHANGE_HP, _impl_.object_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_CHANGE_HP, _impl_.hp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_CONNECTED, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_LOGIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_LOGIN, _impl_.unique_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_LOGIN, _impl_.room_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_LOGIN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_LOGIN, _impl_.login_ok_),
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_LOGIN, _impl_.players_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_CREATE_PLAYER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_CREATE_PLAYER, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_CREATE_PLAYER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_CREATE_PLAYER, _impl_.player_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_ENTER_GAME, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_ENTER_GAME, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_ITEM_LIST, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_ITEM_LIST, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_ADD_ITEM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_ADD_ITEM, _impl_.items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_EQUIP_ITEM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_EQUIP_ITEM, _impl_.item_db_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_EQUIP_ITEM, _impl_.equipped_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_EQUIP_ITEM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_EQUIP_ITEM, _impl_.item_db_id_),
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_EQUIP_ITEM, _impl_.equipped_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_CHANGE_STAT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_CHANGE_STAT, _impl_.stat_info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::MS_PING, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_PONG, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_CHANGE_ROOM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Protocol::UC_CHANGE_ROOM, _impl_.room_id_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Protocol::MS_ENTER_GAME)},
  { 7, -1, -1, sizeof(::Protocol::MS_LEAVE_GAME)},
  { 13, -1, -1, sizeof(::Protocol::MS_SPAWN)},
  { 20, -1, -1, sizeof(::Protocol::MS_DESPAWN)},
  { 27, -1, -1, sizeof(::Protocol::UC_MOVE)},
  { 34, -1, -1, sizeof(::Protocol::MS_MOVE)},
  { 42, -1, -1, sizeof(::Protocol::UC_SKILL)},
  { 49, -1, -1, sizeof(::Protocol::MS_SKILL)},
  { 57, -1, -1, sizeof(::Protocol::MS_DIE)},
  { 65, -1, -1, sizeof(::Protocol::MS_CHANGE_HP)},
  { 73, -1, -1, sizeof(::Protocol::MS_CONNECTED)},
  { 79, -1, -1, sizeof(::Protocol::UC_LOGIN)},
  { 87, -1, -1, sizeof(::Protocol::MS_LOGIN)},
  { 95, -1, -1, sizeof(::Protocol::UC_CREATE_PLAYER)},
  { 102, -1, -1, sizeof(::Protocol::MS_CREATE_PLAYER)},
  { 109, -1, -1, sizeof(::Protocol::UC_ENTER_GAME)},
  { 116, -1, -1, sizeof(::Protocol::MS_ITEM_LIST)},
  { 123, -1, -1, sizeof(::Protocol::MS_ADD_ITEM)},
  { 130, -1, -1, sizeof(::Protocol::UC_EQUIP_ITEM)},
  { 138, -1, -1, sizeof(::Protocol::MS_EQUIP_ITEM)},
  { 146, -1, -1, sizeof(::Protocol::MS_CHANGE_STAT)},
  { 153, -1, -1, sizeof(::Protocol::MS_PING)},
  { 159, -1, -1, sizeof(::Protocol::UC_PONG)},
  { 165, -1, -1, sizeof(::Protocol::UC_CHANGE_ROOM)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::Protocol::_MS_ENTER_GAME_default_instance_._instance,
  &::Protocol::_MS_LEAVE_GAME_default_instance_._instance,
  &::Protocol::_MS_SPAWN_default_instance_._instance,
  &::Protocol::_MS_DESPAWN_default_instance_._instance,
  &::Protocol::_UC_MOVE_default_instance_._instance,
  &::Protocol::_MS_MOVE_default_instance_._instance,
  &::Protocol::_UC_SKILL_default_instance_._instance,
  &::Protocol::_MS_SKILL_default_instance_._instance,
  &::Protocol::_MS_DIE_default_instance_._instance,
  &::Protocol::_MS_CHANGE_HP_default_instance_._instance,
  &::Protocol::_MS_CONNECTED_default_instance_._instance,
  &::Protocol::_UC_LOGIN_default_instance_._instance,
  &::Protocol::_MS_LOGIN_default_instance_._instance,
  &::Protocol::_UC_CREATE_PLAYER_default_instance_._instance,
  &::Protocol::_MS_CREATE_PLAYER_default_instance_._instance,
  &::Protocol::_UC_ENTER_GAME_default_instance_._instance,
  &::Protocol::_MS_ITEM_LIST_default_instance_._instance,
  &::Protocol::_MS_ADD_ITEM_default_instance_._instance,
  &::Protocol::_UC_EQUIP_ITEM_default_instance_._instance,
  &::Protocol::_MS_EQUIP_ITEM_default_instance_._instance,
  &::Protocol::_MS_CHANGE_STAT_default_instance_._instance,
  &::Protocol::_MS_PING_default_instance_._instance,
  &::Protocol::_UC_PONG_default_instance_._instance,
  &::Protocol::_UC_CHANGE_ROOM_default_instance_._instance,
};

const char descriptor_table_protodef_Protocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016Protocol.proto\022\010Protocol\032\nEnum.proto\032\014"
  "Struct.proto\"5\n\rMS_ENTER_GAME\022$\n\006player\030"
  "\001 \001(\0132\024.Protocol.ObjectInfo\"\017\n\rMS_LEAVE_"
  "GAME\"1\n\010MS_SPAWN\022%\n\007objects\030\001 \003(\0132\024.Prot"
  "ocol.ObjectInfo\" \n\nMS_DESPAWN\022\022\n\nobject_"
  "ids\030\001 \003(\005\"3\n\007UC_MOVE\022(\n\010pos_info\030\001 \001(\0132\026"
  ".Protocol.PositionInfo\"F\n\007MS_MOVE\022\021\n\tobj"
  "ect_id\030\001 \001(\005\022(\n\010pos_info\030\002 \001(\0132\026.Protoco"
  "l.PositionInfo\"-\n\010UC_SKILL\022!\n\004info\030\001 \001(\013"
  "2\023.Protocol.SkillInfo\"@\n\010MS_SKILL\022\021\n\tobj"
  "ect_id\030\001 \001(\005\022!\n\004info\030\002 \001(\0132\023.Protocol.Sk"
  "illInfo\"0\n\006MS_DIE\022\021\n\tobject_id\030\001 \001(\005\022\023\n\013"
  "attacker_id\030\002 \001(\005\"-\n\014MS_CHANGE_HP\022\021\n\tobj"
  "ect_id\030\001 \001(\005\022\n\n\002hp\030\002 \001(\005\"\016\n\014MS_CONNECTED"
  "\".\n\010UC_LOGIN\022\021\n\tunique_id\030\001 \001(\t\022\017\n\007room_"
  "id\030\002 \001(\005\"H\n\010MS_LOGIN\022\020\n\010login_ok\030\001 \001(\005\022*"
  "\n\007players\030\002 \003(\0132\031.Protocol.LobbyPlayerIn"
  "fo\" \n\020UC_CREATE_PLAYER\022\014\n\004name\030\001 \001(\t\"=\n\020"
  "MS_CREATE_PLAYER\022)\n\006player\030\001 \001(\0132\031.Proto"
  "col.LobbyPlayerInfo\"\035\n\rUC_ENTER_GAME\022\014\n\004"
  "name\030\001 \001(\t\"1\n\014MS_ITEM_LIST\022!\n\005items\030\001 \003("
  "\0132\022.Protocol.ItemInfo\"0\n\013MS_ADD_ITEM\022!\n\005"
  "items\030\001 \003(\0132\022.Protocol.ItemInfo\"5\n\rUC_EQ"
  "UIP_ITEM\022\022\n\nitem_db_id\030\001 \001(\005\022\020\n\010equipped"
  "\030\002 \001(\010\"5\n\rMS_EQUIP_ITEM\022\022\n\nitem_db_id\030\001 "
  "\001(\005\022\020\n\010equipped\030\002 \001(\010\"7\n\016MS_CHANGE_STAT\022"
  "%\n\tstat_info\030\001 \001(\0132\022.Protocol.StatInfo\"\t"
  "\n\007MS_PING\"\t\n\007UC_PONG\"!\n\016UC_CHANGE_ROOM\022\017"
  "\n\007room_id\030\001 \001(\005B\033\252\002\030Google.Protobuf.Prot"
  "ocolb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Protocol_2eproto_deps[2] = {
  &::descriptor_table_Enum_2eproto,
  &::descriptor_table_Struct_2eproto,
};
static ::_pbi::once_flag descriptor_table_Protocol_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Protocol_2eproto = {
    false, false, 1172, descriptor_table_protodef_Protocol_2eproto,
    "Protocol.proto",
    &descriptor_table_Protocol_2eproto_once, descriptor_table_Protocol_2eproto_deps, 2, 24,
    schemas, file_default_instances, TableStruct_Protocol_2eproto::offsets,
    file_level_metadata_Protocol_2eproto, file_level_enum_descriptors_Protocol_2eproto,
    file_level_service_descriptors_Protocol_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Protocol_2eproto_getter() {
  return &descriptor_table_Protocol_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Protocol_2eproto(&descriptor_table_Protocol_2eproto);
namespace Protocol {

// ===================================================================

class MS_ENTER_GAME::_Internal {
 public:
  static const ::Protocol::ObjectInfo& player(const MS_ENTER_GAME* msg);
};

const ::Protocol::ObjectInfo&
MS_ENTER_GAME::_Internal::player(const MS_ENTER_GAME* msg) {
  return *msg->_impl_.player_;
}
void MS_ENTER_GAME::clear_player() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
}
MS_ENTER_GAME::MS_ENTER_GAME(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_ENTER_GAME)
}
MS_ENTER_GAME::MS_ENTER_GAME(const MS_ENTER_GAME& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_ENTER_GAME* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    _this->_impl_.player_ = new ::Protocol::ObjectInfo(*from._impl_.player_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_ENTER_GAME)
}

inline void MS_ENTER_GAME::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_ENTER_GAME::~MS_ENTER_GAME() {
  // @@protoc_insertion_point(destructor:Protocol.MS_ENTER_GAME)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_ENTER_GAME::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_;
}

void MS_ENTER_GAME::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_ENTER_GAME::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_ENTER_GAME)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_ENTER_GAME::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.ObjectInfo player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_ENTER_GAME::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_ENTER_GAME)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.ObjectInfo player = 1;
  if (this->_internal_has_player()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::player(this),
        _Internal::player(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_ENTER_GAME)
  return target;
}

size_t MS_ENTER_GAME::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_ENTER_GAME)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.ObjectInfo player = 1;
  if (this->_internal_has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_ENTER_GAME::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_ENTER_GAME::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_ENTER_GAME::GetClassData() const { return &_class_data_; }


void MS_ENTER_GAME::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_ENTER_GAME*>(&to_msg);
  auto& from = static_cast<const MS_ENTER_GAME&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_ENTER_GAME)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player()) {
    _this->_internal_mutable_player()->::Protocol::ObjectInfo::MergeFrom(
        from._internal_player());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_ENTER_GAME::CopyFrom(const MS_ENTER_GAME& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_ENTER_GAME)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_ENTER_GAME::IsInitialized() const {
  return true;
}

void MS_ENTER_GAME::InternalSwap(MS_ENTER_GAME* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.player_, other->_impl_.player_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_ENTER_GAME::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[0]);
}

// ===================================================================

class MS_LEAVE_GAME::_Internal {
 public:
};

MS_LEAVE_GAME::MS_LEAVE_GAME(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_LEAVE_GAME)
}
MS_LEAVE_GAME::MS_LEAVE_GAME(const MS_LEAVE_GAME& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MS_LEAVE_GAME* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_LEAVE_GAME)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_LEAVE_GAME::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_LEAVE_GAME::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MS_LEAVE_GAME::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[1]);
}

// ===================================================================

class MS_SPAWN::_Internal {
 public:
};

void MS_SPAWN::clear_objects() {
  _impl_.objects_.Clear();
}
MS_SPAWN::MS_SPAWN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_SPAWN)
}
MS_SPAWN::MS_SPAWN(const MS_SPAWN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_SPAWN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.objects_){from._impl_.objects_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_SPAWN)
}

inline void MS_SPAWN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.objects_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_SPAWN::~MS_SPAWN() {
  // @@protoc_insertion_point(destructor:Protocol.MS_SPAWN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_SPAWN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.objects_.~RepeatedPtrField();
}

void MS_SPAWN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_SPAWN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_SPAWN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.objects_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_SPAWN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Protocol.ObjectInfo objects = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_SPAWN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_SPAWN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.ObjectInfo objects = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_objects_size()); i < n; i++) {
    const auto& repfield = this->_internal_objects(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_SPAWN)
  return target;
}

size_t MS_SPAWN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_SPAWN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.ObjectInfo objects = 1;
  total_size += 1UL * this->_internal_objects_size();
  for (const auto& msg : this->_impl_.objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_SPAWN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_SPAWN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_SPAWN::GetClassData() const { return &_class_data_; }


void MS_SPAWN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_SPAWN*>(&to_msg);
  auto& from = static_cast<const MS_SPAWN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_SPAWN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.objects_.MergeFrom(from._impl_.objects_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_SPAWN::CopyFrom(const MS_SPAWN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_SPAWN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_SPAWN::IsInitialized() const {
  return true;
}

void MS_SPAWN::InternalSwap(MS_SPAWN* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.objects_.InternalSwap(&other->_impl_.objects_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_SPAWN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[2]);
}

// ===================================================================

class MS_DESPAWN::_Internal {
 public:
};

MS_DESPAWN::MS_DESPAWN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_DESPAWN)
}
MS_DESPAWN::MS_DESPAWN(const MS_DESPAWN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_DESPAWN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.object_ids_){from._impl_.object_ids_}
    , /*decltype(_impl_._object_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_DESPAWN)
}

inline void MS_DESPAWN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.object_ids_){arena}
    , /*decltype(_impl_._object_ids_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_DESPAWN::~MS_DESPAWN() {
  // @@protoc_insertion_point(destructor:Protocol.MS_DESPAWN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_DESPAWN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.object_ids_.~RepeatedField();
}

void MS_DESPAWN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_DESPAWN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_DESPAWN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.object_ids_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_DESPAWN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 object_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_object_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_object_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_DESPAWN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_DESPAWN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 object_ids = 1;
  {
    int byte_size = _impl_._object_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_object_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_DESPAWN)
  return target;
}

size_t MS_DESPAWN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_DESPAWN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 object_ids = 1;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.object_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._object_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_DESPAWN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_DESPAWN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_DESPAWN::GetClassData() const { return &_class_data_; }


void MS_DESPAWN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_DESPAWN*>(&to_msg);
  auto& from = static_cast<const MS_DESPAWN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_DESPAWN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.object_ids_.MergeFrom(from._impl_.object_ids_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_DESPAWN::CopyFrom(const MS_DESPAWN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_DESPAWN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_DESPAWN::IsInitialized() const {
  return true;
}

void MS_DESPAWN::InternalSwap(MS_DESPAWN* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.object_ids_.InternalSwap(&other->_impl_.object_ids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_DESPAWN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[3]);
}

// ===================================================================

class UC_MOVE::_Internal {
 public:
  static const ::Protocol::PositionInfo& pos_info(const UC_MOVE* msg);
};

const ::Protocol::PositionInfo&
UC_MOVE::_Internal::pos_info(const UC_MOVE* msg) {
  return *msg->_impl_.pos_info_;
}
void UC_MOVE::clear_pos_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.pos_info_ != nullptr) {
    delete _impl_.pos_info_;
  }
  _impl_.pos_info_ = nullptr;
}
UC_MOVE::UC_MOVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.UC_MOVE)
}
UC_MOVE::UC_MOVE(const UC_MOVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UC_MOVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pos_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pos_info()) {
    _this->_impl_.pos_info_ = new ::Protocol::PositionInfo(*from._impl_.pos_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UC_MOVE)
}

inline void UC_MOVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pos_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UC_MOVE::~UC_MOVE() {
  // @@protoc_insertion_point(destructor:Protocol.UC_MOVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UC_MOVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pos_info_;
}

void UC_MOVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UC_MOVE::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UC_MOVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.pos_info_ != nullptr) {
    delete _impl_.pos_info_;
  }
  _impl_.pos_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UC_MOVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.PositionInfo pos_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_pos_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UC_MOVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UC_MOVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.PositionInfo pos_info = 1;
  if (this->_internal_has_pos_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::pos_info(this),
        _Internal::pos_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UC_MOVE)
  return target;
}

size_t UC_MOVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UC_MOVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.PositionInfo pos_info = 1;
  if (this->_internal_has_pos_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pos_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UC_MOVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UC_MOVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UC_MOVE::GetClassData() const { return &_class_data_; }


void UC_MOVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UC_MOVE*>(&to_msg);
  auto& from = static_cast<const UC_MOVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UC_MOVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pos_info()) {
    _this->_internal_mutable_pos_info()->::Protocol::PositionInfo::MergeFrom(
        from._internal_pos_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UC_MOVE::CopyFrom(const UC_MOVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UC_MOVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UC_MOVE::IsInitialized() const {
  return true;
}

void UC_MOVE::InternalSwap(UC_MOVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.pos_info_, other->_impl_.pos_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UC_MOVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[4]);
}

// ===================================================================

class MS_MOVE::_Internal {
 public:
  static const ::Protocol::PositionInfo& pos_info(const MS_MOVE* msg);
};

const ::Protocol::PositionInfo&
MS_MOVE::_Internal::pos_info(const MS_MOVE* msg) {
  return *msg->_impl_.pos_info_;
}
void MS_MOVE::clear_pos_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.pos_info_ != nullptr) {
    delete _impl_.pos_info_;
  }
  _impl_.pos_info_ = nullptr;
}
MS_MOVE::MS_MOVE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_MOVE)
}
MS_MOVE::MS_MOVE(const MS_MOVE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_MOVE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pos_info_){nullptr}
    , decltype(_impl_.object_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_pos_info()) {
    _this->_impl_.pos_info_ = new ::Protocol::PositionInfo(*from._impl_.pos_info_);
  }
  _this->_impl_.object_id_ = from._impl_.object_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_MOVE)
}

inline void MS_MOVE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.pos_info_){nullptr}
    , decltype(_impl_.object_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_MOVE::~MS_MOVE() {
  // @@protoc_insertion_point(destructor:Protocol.MS_MOVE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_MOVE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.pos_info_;
}

void MS_MOVE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_MOVE::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_MOVE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.pos_info_ != nullptr) {
    delete _impl_.pos_info_;
  }
  _impl_.pos_info_ = nullptr;
  _impl_.object_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_MOVE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.PositionInfo pos_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_pos_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_MOVE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_MOVE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_object_id(), target);
  }

  // .Protocol.PositionInfo pos_info = 2;
  if (this->_internal_has_pos_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::pos_info(this),
        _Internal::pos_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_MOVE)
  return target;
}

size_t MS_MOVE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_MOVE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.PositionInfo pos_info = 2;
  if (this->_internal_has_pos_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pos_info_);
  }

  // int32 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_MOVE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_MOVE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_MOVE::GetClassData() const { return &_class_data_; }


void MS_MOVE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_MOVE*>(&to_msg);
  auto& from = static_cast<const MS_MOVE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_MOVE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_pos_info()) {
    _this->_internal_mutable_pos_info()->::Protocol::PositionInfo::MergeFrom(
        from._internal_pos_info());
  }
  if (from._internal_object_id() != 0) {
    _this->_internal_set_object_id(from._internal_object_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_MOVE::CopyFrom(const MS_MOVE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_MOVE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_MOVE::IsInitialized() const {
  return true;
}

void MS_MOVE::InternalSwap(MS_MOVE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MS_MOVE, _impl_.object_id_)
      + sizeof(MS_MOVE::_impl_.object_id_)
      - PROTOBUF_FIELD_OFFSET(MS_MOVE, _impl_.pos_info_)>(
          reinterpret_cast<char*>(&_impl_.pos_info_),
          reinterpret_cast<char*>(&other->_impl_.pos_info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_MOVE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[5]);
}

// ===================================================================

class UC_SKILL::_Internal {
 public:
  static const ::Protocol::SkillInfo& info(const UC_SKILL* msg);
};

const ::Protocol::SkillInfo&
UC_SKILL::_Internal::info(const UC_SKILL* msg) {
  return *msg->_impl_.info_;
}
void UC_SKILL::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
UC_SKILL::UC_SKILL(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.UC_SKILL)
}
UC_SKILL::UC_SKILL(const UC_SKILL& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UC_SKILL* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::Protocol::SkillInfo(*from._impl_.info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UC_SKILL)
}

inline void UC_SKILL::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UC_SKILL::~UC_SKILL() {
  // @@protoc_insertion_point(destructor:Protocol.UC_SKILL)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UC_SKILL::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void UC_SKILL::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UC_SKILL::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UC_SKILL)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UC_SKILL::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.SkillInfo info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UC_SKILL::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UC_SKILL)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.SkillInfo info = 1;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UC_SKILL)
  return target;
}

size_t UC_SKILL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UC_SKILL)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SkillInfo info = 1;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UC_SKILL::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UC_SKILL::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UC_SKILL::GetClassData() const { return &_class_data_; }


void UC_SKILL::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UC_SKILL*>(&to_msg);
  auto& from = static_cast<const UC_SKILL&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UC_SKILL)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::Protocol::SkillInfo::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UC_SKILL::CopyFrom(const UC_SKILL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UC_SKILL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UC_SKILL::IsInitialized() const {
  return true;
}

void UC_SKILL::InternalSwap(UC_SKILL* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.info_, other->_impl_.info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UC_SKILL::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[6]);
}

// ===================================================================

class MS_SKILL::_Internal {
 public:
  static const ::Protocol::SkillInfo& info(const MS_SKILL* msg);
};

const ::Protocol::SkillInfo&
MS_SKILL::_Internal::info(const MS_SKILL* msg) {
  return *msg->_impl_.info_;
}
void MS_SKILL::clear_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
}
MS_SKILL::MS_SKILL(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_SKILL)
}
MS_SKILL::MS_SKILL(const MS_SKILL& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_SKILL* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.object_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    _this->_impl_.info_ = new ::Protocol::SkillInfo(*from._impl_.info_);
  }
  _this->_impl_.object_id_ = from._impl_.object_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_SKILL)
}

inline void MS_SKILL::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.info_){nullptr}
    , decltype(_impl_.object_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_SKILL::~MS_SKILL() {
  // @@protoc_insertion_point(destructor:Protocol.MS_SKILL)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_SKILL::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.info_;
}

void MS_SKILL::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_SKILL::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_SKILL)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.info_ != nullptr) {
    delete _impl_.info_;
  }
  _impl_.info_ = nullptr;
  _impl_.object_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_SKILL::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Protocol.SkillInfo info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_SKILL::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_SKILL)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_object_id(), target);
  }

  // .Protocol.SkillInfo info = 2;
  if (this->_internal_has_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_SKILL)
  return target;
}

size_t MS_SKILL::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_SKILL)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.SkillInfo info = 2;
  if (this->_internal_has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.info_);
  }

  // int32 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_object_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_SKILL::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_SKILL::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_SKILL::GetClassData() const { return &_class_data_; }


void MS_SKILL::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_SKILL*>(&to_msg);
  auto& from = static_cast<const MS_SKILL&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_SKILL)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_info()) {
    _this->_internal_mutable_info()->::Protocol::SkillInfo::MergeFrom(
        from._internal_info());
  }
  if (from._internal_object_id() != 0) {
    _this->_internal_set_object_id(from._internal_object_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_SKILL::CopyFrom(const MS_SKILL& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_SKILL)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_SKILL::IsInitialized() const {
  return true;
}

void MS_SKILL::InternalSwap(MS_SKILL* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MS_SKILL, _impl_.object_id_)
      + sizeof(MS_SKILL::_impl_.object_id_)
      - PROTOBUF_FIELD_OFFSET(MS_SKILL, _impl_.info_)>(
          reinterpret_cast<char*>(&_impl_.info_),
          reinterpret_cast<char*>(&other->_impl_.info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_SKILL::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[7]);
}

// ===================================================================

class MS_DIE::_Internal {
 public:
};

MS_DIE::MS_DIE(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_DIE)
}
MS_DIE::MS_DIE(const MS_DIE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_DIE* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.object_id_){}
    , decltype(_impl_.attacker_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.object_id_, &from._impl_.object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.attacker_id_) -
    reinterpret_cast<char*>(&_impl_.object_id_)) + sizeof(_impl_.attacker_id_));
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_DIE)
}

inline void MS_DIE::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.object_id_){0}
    , decltype(_impl_.attacker_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_DIE::~MS_DIE() {
  // @@protoc_insertion_point(destructor:Protocol.MS_DIE)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_DIE::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MS_DIE::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_DIE::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_DIE)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.attacker_id_) -
      reinterpret_cast<char*>(&_impl_.object_id_)) + sizeof(_impl_.attacker_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_DIE::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 attacker_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.attacker_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_DIE::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_DIE)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_object_id(), target);
  }

  // int32 attacker_id = 2;
  if (this->_internal_attacker_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_attacker_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_DIE)
  return target;
}

size_t MS_DIE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_DIE)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_object_id());
  }

  // int32 attacker_id = 2;
  if (this->_internal_attacker_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_attacker_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_DIE::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_DIE::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_DIE::GetClassData() const { return &_class_data_; }


void MS_DIE::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_DIE*>(&to_msg);
  auto& from = static_cast<const MS_DIE&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_DIE)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _this->_internal_set_object_id(from._internal_object_id());
  }
  if (from._internal_attacker_id() != 0) {
    _this->_internal_set_attacker_id(from._internal_attacker_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_DIE::CopyFrom(const MS_DIE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_DIE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_DIE::IsInitialized() const {
  return true;
}

void MS_DIE::InternalSwap(MS_DIE* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MS_DIE, _impl_.attacker_id_)
      + sizeof(MS_DIE::_impl_.attacker_id_)
      - PROTOBUF_FIELD_OFFSET(MS_DIE, _impl_.object_id_)>(
          reinterpret_cast<char*>(&_impl_.object_id_),
          reinterpret_cast<char*>(&other->_impl_.object_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_DIE::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[8]);
}

// ===================================================================

class MS_CHANGE_HP::_Internal {
 public:
};

MS_CHANGE_HP::MS_CHANGE_HP(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_CHANGE_HP)
}
MS_CHANGE_HP::MS_CHANGE_HP(const MS_CHANGE_HP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_CHANGE_HP* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.object_id_){}
    , decltype(_impl_.hp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.object_id_, &from._impl_.object_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.hp_) -
    reinterpret_cast<char*>(&_impl_.object_id_)) + sizeof(_impl_.hp_));
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_CHANGE_HP)
}

inline void MS_CHANGE_HP::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.object_id_){0}
    , decltype(_impl_.hp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_CHANGE_HP::~MS_CHANGE_HP() {
  // @@protoc_insertion_point(destructor:Protocol.MS_CHANGE_HP)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_CHANGE_HP::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MS_CHANGE_HP::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_CHANGE_HP::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_CHANGE_HP)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.object_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.hp_) -
      reinterpret_cast<char*>(&_impl_.object_id_)) + sizeof(_impl_.hp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_CHANGE_HP::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 object_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.object_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 hp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_CHANGE_HP::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_CHANGE_HP)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 object_id = 1;
  if (this->_internal_object_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_object_id(), target);
  }

  // int32 hp = 2;
  if (this->_internal_hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_hp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_CHANGE_HP)
  return target;
}

size_t MS_CHANGE_HP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_CHANGE_HP)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 object_id = 1;
  if (this->_internal_object_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_object_id());
  }

  // int32 hp = 2;
  if (this->_internal_hp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_hp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_CHANGE_HP::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_CHANGE_HP::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_CHANGE_HP::GetClassData() const { return &_class_data_; }


void MS_CHANGE_HP::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_CHANGE_HP*>(&to_msg);
  auto& from = static_cast<const MS_CHANGE_HP&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_CHANGE_HP)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_object_id() != 0) {
    _this->_internal_set_object_id(from._internal_object_id());
  }
  if (from._internal_hp() != 0) {
    _this->_internal_set_hp(from._internal_hp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_CHANGE_HP::CopyFrom(const MS_CHANGE_HP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_CHANGE_HP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_CHANGE_HP::IsInitialized() const {
  return true;
}

void MS_CHANGE_HP::InternalSwap(MS_CHANGE_HP* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MS_CHANGE_HP, _impl_.hp_)
      + sizeof(MS_CHANGE_HP::_impl_.hp_)
      - PROTOBUF_FIELD_OFFSET(MS_CHANGE_HP, _impl_.object_id_)>(
          reinterpret_cast<char*>(&_impl_.object_id_),
          reinterpret_cast<char*>(&other->_impl_.object_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_CHANGE_HP::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[9]);
}

// ===================================================================

class MS_CONNECTED::_Internal {
 public:
};

MS_CONNECTED::MS_CONNECTED(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_CONNECTED)
}
MS_CONNECTED::MS_CONNECTED(const MS_CONNECTED& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MS_CONNECTED* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_CONNECTED)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_CONNECTED::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_CONNECTED::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MS_CONNECTED::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[10]);
}

// ===================================================================

class UC_LOGIN::_Internal {
 public:
};

UC_LOGIN::UC_LOGIN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.UC_LOGIN)
}
UC_LOGIN::UC_LOGIN(const UC_LOGIN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UC_LOGIN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.unique_id_){}
    , decltype(_impl_.room_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.unique_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unique_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_unique_id().empty()) {
    _this->_impl_.unique_id_.Set(from._internal_unique_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.room_id_ = from._impl_.room_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.UC_LOGIN)
}

inline void UC_LOGIN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.unique_id_){}
    , decltype(_impl_.room_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.unique_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.unique_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UC_LOGIN::~UC_LOGIN() {
  // @@protoc_insertion_point(destructor:Protocol.UC_LOGIN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UC_LOGIN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.unique_id_.Destroy();
}

void UC_LOGIN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UC_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UC_LOGIN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.unique_id_.ClearToEmpty();
  _impl_.room_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UC_LOGIN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string unique_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_unique_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.UC_LOGIN.unique_id"));
        } else
          goto handle_unusual;
        continue;
      // int32 room_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UC_LOGIN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UC_LOGIN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string unique_id = 1;
  if (!this->_internal_unique_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unique_id().data(), static_cast<int>(this->_internal_unique_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UC_LOGIN.unique_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_unique_id(), target);
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UC_LOGIN)
  return target;
}

size_t UC_LOGIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UC_LOGIN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string unique_id = 1;
  if (!this->_internal_unique_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unique_id());
  }

  // int32 room_id = 2;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UC_LOGIN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UC_LOGIN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UC_LOGIN::GetClassData() const { return &_class_data_; }


void UC_LOGIN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UC_LOGIN*>(&to_msg);
  auto& from = static_cast<const UC_LOGIN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UC_LOGIN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_unique_id().empty()) {
    _this->_internal_set_unique_id(from._internal_unique_id());
  }
  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UC_LOGIN::CopyFrom(const UC_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UC_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UC_LOGIN::IsInitialized() const {
  return true;
}

void UC_LOGIN::InternalSwap(UC_LOGIN* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.unique_id_, lhs_arena,
      &other->_impl_.unique_id_, rhs_arena
  );
  swap(_impl_.room_id_, other->_impl_.room_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UC_LOGIN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[11]);
}

// ===================================================================

class MS_LOGIN::_Internal {
 public:
};

void MS_LOGIN::clear_players() {
  _impl_.players_.Clear();
}
MS_LOGIN::MS_LOGIN(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_LOGIN)
}
MS_LOGIN::MS_LOGIN(const MS_LOGIN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_LOGIN* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.players_){from._impl_.players_}
    , decltype(_impl_.login_ok_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.login_ok_ = from._impl_.login_ok_;
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_LOGIN)
}

inline void MS_LOGIN::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.players_){arena}
    , decltype(_impl_.login_ok_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_LOGIN::~MS_LOGIN() {
  // @@protoc_insertion_point(destructor:Protocol.MS_LOGIN)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_LOGIN::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.players_.~RepeatedPtrField();
}

void MS_LOGIN::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_LOGIN::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_LOGIN)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _impl_.login_ok_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_LOGIN::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 login_ok = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.login_ok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Protocol.LobbyPlayerInfo players = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_players(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_LOGIN::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_LOGIN)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 login_ok = 1;
  if (this->_internal_login_ok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_login_ok(), target);
  }

  // repeated .Protocol.LobbyPlayerInfo players = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_players_size()); i < n; i++) {
    const auto& repfield = this->_internal_players(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_LOGIN)
  return target;
}

size_t MS_LOGIN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_LOGIN)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.LobbyPlayerInfo players = 2;
  total_size += 1UL * this->_internal_players_size();
  for (const auto& msg : this->_impl_.players_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 login_ok = 1;
  if (this->_internal_login_ok() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_login_ok());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_LOGIN::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_LOGIN::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_LOGIN::GetClassData() const { return &_class_data_; }


void MS_LOGIN::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_LOGIN*>(&to_msg);
  auto& from = static_cast<const MS_LOGIN&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_LOGIN)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.players_.MergeFrom(from._impl_.players_);
  if (from._internal_login_ok() != 0) {
    _this->_internal_set_login_ok(from._internal_login_ok());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_LOGIN::CopyFrom(const MS_LOGIN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_LOGIN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_LOGIN::IsInitialized() const {
  return true;
}

void MS_LOGIN::InternalSwap(MS_LOGIN* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
  swap(_impl_.login_ok_, other->_impl_.login_ok_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_LOGIN::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[12]);
}

// ===================================================================

class UC_CREATE_PLAYER::_Internal {
 public:
};

UC_CREATE_PLAYER::UC_CREATE_PLAYER(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.UC_CREATE_PLAYER)
}
UC_CREATE_PLAYER::UC_CREATE_PLAYER(const UC_CREATE_PLAYER& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UC_CREATE_PLAYER* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UC_CREATE_PLAYER)
}

inline void UC_CREATE_PLAYER::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UC_CREATE_PLAYER::~UC_CREATE_PLAYER() {
  // @@protoc_insertion_point(destructor:Protocol.UC_CREATE_PLAYER)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UC_CREATE_PLAYER::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void UC_CREATE_PLAYER::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UC_CREATE_PLAYER::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UC_CREATE_PLAYER)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UC_CREATE_PLAYER::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.UC_CREATE_PLAYER.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UC_CREATE_PLAYER::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UC_CREATE_PLAYER)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UC_CREATE_PLAYER.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UC_CREATE_PLAYER)
  return target;
}

size_t UC_CREATE_PLAYER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UC_CREATE_PLAYER)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UC_CREATE_PLAYER::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UC_CREATE_PLAYER::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UC_CREATE_PLAYER::GetClassData() const { return &_class_data_; }


void UC_CREATE_PLAYER::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UC_CREATE_PLAYER*>(&to_msg);
  auto& from = static_cast<const UC_CREATE_PLAYER&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UC_CREATE_PLAYER)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UC_CREATE_PLAYER::CopyFrom(const UC_CREATE_PLAYER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UC_CREATE_PLAYER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UC_CREATE_PLAYER::IsInitialized() const {
  return true;
}

void UC_CREATE_PLAYER::InternalSwap(UC_CREATE_PLAYER* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UC_CREATE_PLAYER::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[13]);
}

// ===================================================================

class MS_CREATE_PLAYER::_Internal {
 public:
  static const ::Protocol::LobbyPlayerInfo& player(const MS_CREATE_PLAYER* msg);
};

const ::Protocol::LobbyPlayerInfo&
MS_CREATE_PLAYER::_Internal::player(const MS_CREATE_PLAYER* msg) {
  return *msg->_impl_.player_;
}
void MS_CREATE_PLAYER::clear_player() {
  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
}
MS_CREATE_PLAYER::MS_CREATE_PLAYER(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_CREATE_PLAYER)
}
MS_CREATE_PLAYER::MS_CREATE_PLAYER(const MS_CREATE_PLAYER& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_CREATE_PLAYER* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_player()) {
    _this->_impl_.player_ = new ::Protocol::LobbyPlayerInfo(*from._impl_.player_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_CREATE_PLAYER)
}

inline void MS_CREATE_PLAYER::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.player_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_CREATE_PLAYER::~MS_CREATE_PLAYER() {
  // @@protoc_insertion_point(destructor:Protocol.MS_CREATE_PLAYER)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_CREATE_PLAYER::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.player_;
}

void MS_CREATE_PLAYER::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_CREATE_PLAYER::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_CREATE_PLAYER)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.player_ != nullptr) {
    delete _impl_.player_;
  }
  _impl_.player_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_CREATE_PLAYER::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.LobbyPlayerInfo player = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_player(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_CREATE_PLAYER::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_CREATE_PLAYER)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.LobbyPlayerInfo player = 1;
  if (this->_internal_has_player()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::player(this),
        _Internal::player(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_CREATE_PLAYER)
  return target;
}

size_t MS_CREATE_PLAYER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_CREATE_PLAYER)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.LobbyPlayerInfo player = 1;
  if (this->_internal_has_player()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.player_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_CREATE_PLAYER::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_CREATE_PLAYER::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_CREATE_PLAYER::GetClassData() const { return &_class_data_; }


void MS_CREATE_PLAYER::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_CREATE_PLAYER*>(&to_msg);
  auto& from = static_cast<const MS_CREATE_PLAYER&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_CREATE_PLAYER)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_player()) {
    _this->_internal_mutable_player()->::Protocol::LobbyPlayerInfo::MergeFrom(
        from._internal_player());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_CREATE_PLAYER::CopyFrom(const MS_CREATE_PLAYER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_CREATE_PLAYER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_CREATE_PLAYER::IsInitialized() const {
  return true;
}

void MS_CREATE_PLAYER::InternalSwap(MS_CREATE_PLAYER* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.player_, other->_impl_.player_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_CREATE_PLAYER::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[14]);
}

// ===================================================================

class UC_ENTER_GAME::_Internal {
 public:
};

UC_ENTER_GAME::UC_ENTER_GAME(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.UC_ENTER_GAME)
}
UC_ENTER_GAME::UC_ENTER_GAME(const UC_ENTER_GAME& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UC_ENTER_GAME* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.UC_ENTER_GAME)
}

inline void UC_ENTER_GAME::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UC_ENTER_GAME::~UC_ENTER_GAME() {
  // @@protoc_insertion_point(destructor:Protocol.UC_ENTER_GAME)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UC_ENTER_GAME::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void UC_ENTER_GAME::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UC_ENTER_GAME::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UC_ENTER_GAME)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UC_ENTER_GAME::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "Protocol.UC_ENTER_GAME.name"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UC_ENTER_GAME::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UC_ENTER_GAME)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Protocol.UC_ENTER_GAME.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UC_ENTER_GAME)
  return target;
}

size_t UC_ENTER_GAME::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UC_ENTER_GAME)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UC_ENTER_GAME::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UC_ENTER_GAME::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UC_ENTER_GAME::GetClassData() const { return &_class_data_; }


void UC_ENTER_GAME::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UC_ENTER_GAME*>(&to_msg);
  auto& from = static_cast<const UC_ENTER_GAME&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UC_ENTER_GAME)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UC_ENTER_GAME::CopyFrom(const UC_ENTER_GAME& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UC_ENTER_GAME)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UC_ENTER_GAME::IsInitialized() const {
  return true;
}

void UC_ENTER_GAME::InternalSwap(UC_ENTER_GAME* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UC_ENTER_GAME::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[15]);
}

// ===================================================================

class MS_ITEM_LIST::_Internal {
 public:
};

void MS_ITEM_LIST::clear_items() {
  _impl_.items_.Clear();
}
MS_ITEM_LIST::MS_ITEM_LIST(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_ITEM_LIST)
}
MS_ITEM_LIST::MS_ITEM_LIST(const MS_ITEM_LIST& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_ITEM_LIST* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_ITEM_LIST)
}

inline void MS_ITEM_LIST::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_ITEM_LIST::~MS_ITEM_LIST() {
  // @@protoc_insertion_point(destructor:Protocol.MS_ITEM_LIST)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_ITEM_LIST::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void MS_ITEM_LIST::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_ITEM_LIST::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_ITEM_LIST)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_ITEM_LIST::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Protocol.ItemInfo items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_ITEM_LIST::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_ITEM_LIST)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.ItemInfo items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_ITEM_LIST)
  return target;
}

size_t MS_ITEM_LIST::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_ITEM_LIST)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.ItemInfo items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_ITEM_LIST::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_ITEM_LIST::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_ITEM_LIST::GetClassData() const { return &_class_data_; }


void MS_ITEM_LIST::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_ITEM_LIST*>(&to_msg);
  auto& from = static_cast<const MS_ITEM_LIST&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_ITEM_LIST)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_ITEM_LIST::CopyFrom(const MS_ITEM_LIST& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_ITEM_LIST)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_ITEM_LIST::IsInitialized() const {
  return true;
}

void MS_ITEM_LIST::InternalSwap(MS_ITEM_LIST* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_ITEM_LIST::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[16]);
}

// ===================================================================

class MS_ADD_ITEM::_Internal {
 public:
};

void MS_ADD_ITEM::clear_items() {
  _impl_.items_.Clear();
}
MS_ADD_ITEM::MS_ADD_ITEM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_ADD_ITEM)
}
MS_ADD_ITEM::MS_ADD_ITEM(const MS_ADD_ITEM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_ADD_ITEM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){from._impl_.items_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_ADD_ITEM)
}

inline void MS_ADD_ITEM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.items_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_ADD_ITEM::~MS_ADD_ITEM() {
  // @@protoc_insertion_point(destructor:Protocol.MS_ADD_ITEM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_ADD_ITEM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.items_.~RepeatedPtrField();
}

void MS_ADD_ITEM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_ADD_ITEM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_ADD_ITEM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_ADD_ITEM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Protocol.ItemInfo items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_ADD_ITEM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_ADD_ITEM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Protocol.ItemInfo items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_ADD_ITEM)
  return target;
}

size_t MS_ADD_ITEM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_ADD_ITEM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Protocol.ItemInfo items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_impl_.items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_ADD_ITEM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_ADD_ITEM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_ADD_ITEM::GetClassData() const { return &_class_data_; }


void MS_ADD_ITEM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_ADD_ITEM*>(&to_msg);
  auto& from = static_cast<const MS_ADD_ITEM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_ADD_ITEM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.items_.MergeFrom(from._impl_.items_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_ADD_ITEM::CopyFrom(const MS_ADD_ITEM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_ADD_ITEM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_ADD_ITEM::IsInitialized() const {
  return true;
}

void MS_ADD_ITEM::InternalSwap(MS_ADD_ITEM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_ADD_ITEM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[17]);
}

// ===================================================================

class UC_EQUIP_ITEM::_Internal {
 public:
};

UC_EQUIP_ITEM::UC_EQUIP_ITEM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.UC_EQUIP_ITEM)
}
UC_EQUIP_ITEM::UC_EQUIP_ITEM(const UC_EQUIP_ITEM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UC_EQUIP_ITEM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_db_id_){}
    , decltype(_impl_.equipped_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.item_db_id_, &from._impl_.item_db_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.equipped_) -
    reinterpret_cast<char*>(&_impl_.item_db_id_)) + sizeof(_impl_.equipped_));
  // @@protoc_insertion_point(copy_constructor:Protocol.UC_EQUIP_ITEM)
}

inline void UC_EQUIP_ITEM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_db_id_){0}
    , decltype(_impl_.equipped_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UC_EQUIP_ITEM::~UC_EQUIP_ITEM() {
  // @@protoc_insertion_point(destructor:Protocol.UC_EQUIP_ITEM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UC_EQUIP_ITEM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UC_EQUIP_ITEM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UC_EQUIP_ITEM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UC_EQUIP_ITEM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.item_db_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.equipped_) -
      reinterpret_cast<char*>(&_impl_.item_db_id_)) + sizeof(_impl_.equipped_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UC_EQUIP_ITEM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 item_db_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_db_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool equipped = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.equipped_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UC_EQUIP_ITEM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UC_EQUIP_ITEM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_db_id = 1;
  if (this->_internal_item_db_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_item_db_id(), target);
  }

  // bool equipped = 2;
  if (this->_internal_equipped() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_equipped(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UC_EQUIP_ITEM)
  return target;
}

size_t UC_EQUIP_ITEM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UC_EQUIP_ITEM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_db_id = 1;
  if (this->_internal_item_db_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_db_id());
  }

  // bool equipped = 2;
  if (this->_internal_equipped() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UC_EQUIP_ITEM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UC_EQUIP_ITEM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UC_EQUIP_ITEM::GetClassData() const { return &_class_data_; }


void UC_EQUIP_ITEM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UC_EQUIP_ITEM*>(&to_msg);
  auto& from = static_cast<const UC_EQUIP_ITEM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UC_EQUIP_ITEM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_db_id() != 0) {
    _this->_internal_set_item_db_id(from._internal_item_db_id());
  }
  if (from._internal_equipped() != 0) {
    _this->_internal_set_equipped(from._internal_equipped());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UC_EQUIP_ITEM::CopyFrom(const UC_EQUIP_ITEM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UC_EQUIP_ITEM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UC_EQUIP_ITEM::IsInitialized() const {
  return true;
}

void UC_EQUIP_ITEM::InternalSwap(UC_EQUIP_ITEM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UC_EQUIP_ITEM, _impl_.equipped_)
      + sizeof(UC_EQUIP_ITEM::_impl_.equipped_)
      - PROTOBUF_FIELD_OFFSET(UC_EQUIP_ITEM, _impl_.item_db_id_)>(
          reinterpret_cast<char*>(&_impl_.item_db_id_),
          reinterpret_cast<char*>(&other->_impl_.item_db_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UC_EQUIP_ITEM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[18]);
}

// ===================================================================

class MS_EQUIP_ITEM::_Internal {
 public:
};

MS_EQUIP_ITEM::MS_EQUIP_ITEM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_EQUIP_ITEM)
}
MS_EQUIP_ITEM::MS_EQUIP_ITEM(const MS_EQUIP_ITEM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_EQUIP_ITEM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.item_db_id_){}
    , decltype(_impl_.equipped_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.item_db_id_, &from._impl_.item_db_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.equipped_) -
    reinterpret_cast<char*>(&_impl_.item_db_id_)) + sizeof(_impl_.equipped_));
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_EQUIP_ITEM)
}

inline void MS_EQUIP_ITEM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.item_db_id_){0}
    , decltype(_impl_.equipped_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_EQUIP_ITEM::~MS_EQUIP_ITEM() {
  // @@protoc_insertion_point(destructor:Protocol.MS_EQUIP_ITEM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_EQUIP_ITEM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MS_EQUIP_ITEM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_EQUIP_ITEM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_EQUIP_ITEM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.item_db_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.equipped_) -
      reinterpret_cast<char*>(&_impl_.item_db_id_)) + sizeof(_impl_.equipped_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_EQUIP_ITEM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 item_db_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.item_db_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool equipped = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.equipped_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_EQUIP_ITEM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_EQUIP_ITEM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 item_db_id = 1;
  if (this->_internal_item_db_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_item_db_id(), target);
  }

  // bool equipped = 2;
  if (this->_internal_equipped() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_equipped(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_EQUIP_ITEM)
  return target;
}

size_t MS_EQUIP_ITEM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_EQUIP_ITEM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 item_db_id = 1;
  if (this->_internal_item_db_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_item_db_id());
  }

  // bool equipped = 2;
  if (this->_internal_equipped() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_EQUIP_ITEM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_EQUIP_ITEM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_EQUIP_ITEM::GetClassData() const { return &_class_data_; }


void MS_EQUIP_ITEM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_EQUIP_ITEM*>(&to_msg);
  auto& from = static_cast<const MS_EQUIP_ITEM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_EQUIP_ITEM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_item_db_id() != 0) {
    _this->_internal_set_item_db_id(from._internal_item_db_id());
  }
  if (from._internal_equipped() != 0) {
    _this->_internal_set_equipped(from._internal_equipped());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_EQUIP_ITEM::CopyFrom(const MS_EQUIP_ITEM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_EQUIP_ITEM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_EQUIP_ITEM::IsInitialized() const {
  return true;
}

void MS_EQUIP_ITEM::InternalSwap(MS_EQUIP_ITEM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MS_EQUIP_ITEM, _impl_.equipped_)
      + sizeof(MS_EQUIP_ITEM::_impl_.equipped_)
      - PROTOBUF_FIELD_OFFSET(MS_EQUIP_ITEM, _impl_.item_db_id_)>(
          reinterpret_cast<char*>(&_impl_.item_db_id_),
          reinterpret_cast<char*>(&other->_impl_.item_db_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_EQUIP_ITEM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[19]);
}

// ===================================================================

class MS_CHANGE_STAT::_Internal {
 public:
  static const ::Protocol::StatInfo& stat_info(const MS_CHANGE_STAT* msg);
};

const ::Protocol::StatInfo&
MS_CHANGE_STAT::_Internal::stat_info(const MS_CHANGE_STAT* msg) {
  return *msg->_impl_.stat_info_;
}
void MS_CHANGE_STAT::clear_stat_info() {
  if (GetArenaForAllocation() == nullptr && _impl_.stat_info_ != nullptr) {
    delete _impl_.stat_info_;
  }
  _impl_.stat_info_ = nullptr;
}
MS_CHANGE_STAT::MS_CHANGE_STAT(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_CHANGE_STAT)
}
MS_CHANGE_STAT::MS_CHANGE_STAT(const MS_CHANGE_STAT& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MS_CHANGE_STAT* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stat_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_stat_info()) {
    _this->_impl_.stat_info_ = new ::Protocol::StatInfo(*from._impl_.stat_info_);
  }
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_CHANGE_STAT)
}

inline void MS_CHANGE_STAT::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stat_info_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MS_CHANGE_STAT::~MS_CHANGE_STAT() {
  // @@protoc_insertion_point(destructor:Protocol.MS_CHANGE_STAT)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MS_CHANGE_STAT::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.stat_info_;
}

void MS_CHANGE_STAT::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MS_CHANGE_STAT::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.MS_CHANGE_STAT)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.stat_info_ != nullptr) {
    delete _impl_.stat_info_;
  }
  _impl_.stat_info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MS_CHANGE_STAT::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Protocol.StatInfo stat_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_stat_info(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MS_CHANGE_STAT::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.MS_CHANGE_STAT)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Protocol.StatInfo stat_info = 1;
  if (this->_internal_has_stat_info()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::stat_info(this),
        _Internal::stat_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.MS_CHANGE_STAT)
  return target;
}

size_t MS_CHANGE_STAT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.MS_CHANGE_STAT)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Protocol.StatInfo stat_info = 1;
  if (this->_internal_has_stat_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.stat_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_CHANGE_STAT::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MS_CHANGE_STAT::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_CHANGE_STAT::GetClassData() const { return &_class_data_; }


void MS_CHANGE_STAT::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MS_CHANGE_STAT*>(&to_msg);
  auto& from = static_cast<const MS_CHANGE_STAT&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.MS_CHANGE_STAT)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_stat_info()) {
    _this->_internal_mutable_stat_info()->::Protocol::StatInfo::MergeFrom(
        from._internal_stat_info());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MS_CHANGE_STAT::CopyFrom(const MS_CHANGE_STAT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.MS_CHANGE_STAT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MS_CHANGE_STAT::IsInitialized() const {
  return true;
}

void MS_CHANGE_STAT::InternalSwap(MS_CHANGE_STAT* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.stat_info_, other->_impl_.stat_info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MS_CHANGE_STAT::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[20]);
}

// ===================================================================

class MS_PING::_Internal {
 public:
};

MS_PING::MS_PING(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.MS_PING)
}
MS_PING::MS_PING(const MS_PING& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  MS_PING* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.MS_PING)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MS_PING::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MS_PING::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MS_PING::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[21]);
}

// ===================================================================

class UC_PONG::_Internal {
 public:
};

UC_PONG::UC_PONG(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Protocol.UC_PONG)
}
UC_PONG::UC_PONG(const UC_PONG& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  UC_PONG* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Protocol.UC_PONG)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UC_PONG::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UC_PONG::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata UC_PONG::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[22]);
}

// ===================================================================

class UC_CHANGE_ROOM::_Internal {
 public:
};

UC_CHANGE_ROOM::UC_CHANGE_ROOM(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:Protocol.UC_CHANGE_ROOM)
}
UC_CHANGE_ROOM::UC_CHANGE_ROOM(const UC_CHANGE_ROOM& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UC_CHANGE_ROOM* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.room_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.room_id_ = from._impl_.room_id_;
  // @@protoc_insertion_point(copy_constructor:Protocol.UC_CHANGE_ROOM)
}

inline void UC_CHANGE_ROOM::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.room_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UC_CHANGE_ROOM::~UC_CHANGE_ROOM() {
  // @@protoc_insertion_point(destructor:Protocol.UC_CHANGE_ROOM)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UC_CHANGE_ROOM::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UC_CHANGE_ROOM::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UC_CHANGE_ROOM::Clear() {
// @@protoc_insertion_point(message_clear_start:Protocol.UC_CHANGE_ROOM)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.room_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UC_CHANGE_ROOM::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 room_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.room_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UC_CHANGE_ROOM::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Protocol.UC_CHANGE_ROOM)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_room_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Protocol.UC_CHANGE_ROOM)
  return target;
}

size_t UC_CHANGE_ROOM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Protocol.UC_CHANGE_ROOM)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 room_id = 1;
  if (this->_internal_room_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_room_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UC_CHANGE_ROOM::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UC_CHANGE_ROOM::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UC_CHANGE_ROOM::GetClassData() const { return &_class_data_; }


void UC_CHANGE_ROOM::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UC_CHANGE_ROOM*>(&to_msg);
  auto& from = static_cast<const UC_CHANGE_ROOM&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Protocol.UC_CHANGE_ROOM)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_room_id() != 0) {
    _this->_internal_set_room_id(from._internal_room_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UC_CHANGE_ROOM::CopyFrom(const UC_CHANGE_ROOM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Protocol.UC_CHANGE_ROOM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UC_CHANGE_ROOM::IsInitialized() const {
  return true;
}

void UC_CHANGE_ROOM::InternalSwap(UC_CHANGE_ROOM* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.room_id_, other->_impl_.room_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UC_CHANGE_ROOM::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Protocol_2eproto_getter, &descriptor_table_Protocol_2eproto_once,
      file_level_metadata_Protocol_2eproto[23]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Protocol
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Protocol::MS_ENTER_GAME*
Arena::CreateMaybeMessage< ::Protocol::MS_ENTER_GAME >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_ENTER_GAME >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_LEAVE_GAME*
Arena::CreateMaybeMessage< ::Protocol::MS_LEAVE_GAME >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_LEAVE_GAME >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_SPAWN*
Arena::CreateMaybeMessage< ::Protocol::MS_SPAWN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_SPAWN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_DESPAWN*
Arena::CreateMaybeMessage< ::Protocol::MS_DESPAWN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_DESPAWN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UC_MOVE*
Arena::CreateMaybeMessage< ::Protocol::UC_MOVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::UC_MOVE >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_MOVE*
Arena::CreateMaybeMessage< ::Protocol::MS_MOVE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_MOVE >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UC_SKILL*
Arena::CreateMaybeMessage< ::Protocol::UC_SKILL >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::UC_SKILL >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_SKILL*
Arena::CreateMaybeMessage< ::Protocol::MS_SKILL >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_SKILL >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_DIE*
Arena::CreateMaybeMessage< ::Protocol::MS_DIE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_DIE >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_CHANGE_HP*
Arena::CreateMaybeMessage< ::Protocol::MS_CHANGE_HP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_CHANGE_HP >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_CONNECTED*
Arena::CreateMaybeMessage< ::Protocol::MS_CONNECTED >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_CONNECTED >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UC_LOGIN*
Arena::CreateMaybeMessage< ::Protocol::UC_LOGIN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::UC_LOGIN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_LOGIN*
Arena::CreateMaybeMessage< ::Protocol::MS_LOGIN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_LOGIN >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UC_CREATE_PLAYER*
Arena::CreateMaybeMessage< ::Protocol::UC_CREATE_PLAYER >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::UC_CREATE_PLAYER >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_CREATE_PLAYER*
Arena::CreateMaybeMessage< ::Protocol::MS_CREATE_PLAYER >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_CREATE_PLAYER >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UC_ENTER_GAME*
Arena::CreateMaybeMessage< ::Protocol::UC_ENTER_GAME >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::UC_ENTER_GAME >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_ITEM_LIST*
Arena::CreateMaybeMessage< ::Protocol::MS_ITEM_LIST >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_ITEM_LIST >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_ADD_ITEM*
Arena::CreateMaybeMessage< ::Protocol::MS_ADD_ITEM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_ADD_ITEM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UC_EQUIP_ITEM*
Arena::CreateMaybeMessage< ::Protocol::UC_EQUIP_ITEM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::UC_EQUIP_ITEM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_EQUIP_ITEM*
Arena::CreateMaybeMessage< ::Protocol::MS_EQUIP_ITEM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_EQUIP_ITEM >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_CHANGE_STAT*
Arena::CreateMaybeMessage< ::Protocol::MS_CHANGE_STAT >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_CHANGE_STAT >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::MS_PING*
Arena::CreateMaybeMessage< ::Protocol::MS_PING >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::MS_PING >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UC_PONG*
Arena::CreateMaybeMessage< ::Protocol::UC_PONG >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::UC_PONG >(arena);
}
template<> PROTOBUF_NOINLINE ::Protocol::UC_CHANGE_ROOM*
Arena::CreateMaybeMessage< ::Protocol::UC_CHANGE_ROOM >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Protocol::UC_CHANGE_ROOM >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
